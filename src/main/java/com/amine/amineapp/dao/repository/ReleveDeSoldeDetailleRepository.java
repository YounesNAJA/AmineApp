package com.amine.amineapp.dao.repository;

import com.amine.amineapp.model.ReleveDeSoldeDetaille;
import com.amine.amineapp.model.embedded.ReleveDeSoldeDetailleId;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.PagingAndSortingRepository;
import org.springframework.stereotype.Repository;

import java.util.List;

@Repository
public interface ReleveDeSoldeDetailleRepository extends PagingAndSortingRepository<ReleveDeSoldeDetaille, ReleveDeSoldeDetailleId> {
    @Query(value =  "SELECT DISTINCT B.BOOKINGDATE AS DATE_MAJ, C.POAHOLDER AS CODE_MANDATAIRE, F.BPNAME AS LIBELLE_MANDATAIRE, B.ACOWNERID AS CODE_MANDANT, G.BPNAME AS LIBELLE_MANDANT, A.ACNO AS NUM_COMPTE, D.ISSUERCD AS EMETTEUR, AG.AGENTID AS AGENT, AGS.AGENTID AS GESTION, SECURITYID AS CODE_VALEUR, D.ENGLONGNAME AS LIBELLE_VALEUR, NORMALQUANTITY AS QUANTITE, ACOPENINGDATE AS DATE_OUVERTURE, CASE WHEN (D.EXCHIND = 'N' AND D.CLASSID != 'MTFU') THEN D.PARVALUE ELSE (SELECT h.closeprice FROM fim_qutndtls_tmp_v h WHERE h.INSTRID = D.INSTRID AND h.ACT_DATE = B.BOOKINGDATE) END AS PRIX, CASE WHEN (D.EXCHIND = 'N' AND D.CLASSID != 'MTFU') THEN NORMALQUANTITY * D.PARVALUE ELSE NORMALQUANTITY * (SELECT h.closeprice FROM fim_qutndtls_tmp_v h WHERE h.INSTRID = D.INSTRID AND h.ACT_DATE = B.BOOKINGDATE) END AS CAPITALISATION, CASE WHEN NORMALQUANTITY >= 0 THEN '+' ELSE '-' END AS SENS, D.CLASSID AS CLASS, D.INSTRTYPE AS TYPE FROM stg_bkp_secac A INNER JOIN stg_bkp_secposeod B ON A.ACOWNERID = B.ACOWNERID AND A.ACNO = B.ACNO AND (?1 IS NULL OR B.BOOKINGDATE >= ?1) AND (?1 IS NULL OR B.BOOKINGDATE <= ?1) AND B.NORMALQUANTITY != 0 INNER JOIN stg_bpm_poadetails C ON C.BPID = A.ACOWNERID AND C.TODATE >= B.BOOKINGDATE AND C.MCSTATUS = 2 INNER JOIN stg_fim_prmydtls D ON B.SECURITYID = D.INSTRID INNER JOIN stg_bpm_prmrydtls F ON C.POAHOLDER = F.BPID INNER JOIN stg_bpm_prmrydtls G ON A.ACOWNERID = G.BPID LEFT OUTER JOIN stg_fim_asoctdagnt AG ON B.SECURITYID = AG.INSTRID AND AG.AGENTTYPE = 'REGT' AND AG.DEFAULTIND = 'Y' LEFT OUTER JOIN stg_fim_asoctdagnt AGS ON B.SECURITYID = AGS.INSTRID AND AGS.AGENTTYPE = 'ASMR' AND AGS.DEFAULTIND = 'Y' LEFT OUTER JOIN stg_fim_qutndtls E ON B.SECURITYID = E.INSTRID AND D.INSTRID = E.INSTRID UNION SELECT DISTINCT B.BOOKINGDATE AS DATE_MAJ, B.ACOWNERID AS CODE_MANDATAIRE, F.BPNAME AS LIBELLE_MANDATAIRE, B.ACOWNERID AS CODE_MANDANT, G.BPNAME AS LIBELLE_MANDANT, A.ACNO AS NUM_COMPTE, D.ISSUERCD AS EMETTEUR, AG.AGENTID AS AGENT, AGS.AGENTID AS GESTION, SECURITYID AS CODE_VALEUR, D.ENGLONGNAME AS LIBELLE_VALEUR, NORMALQUANTITY AS QUANTITE, ACOPENINGDATE AS DATE_OUVERTURE, CASE WHEN (D.EXCHIND = 'N' AND D.CLASSID != 'MTFU') THEN D.PARVALUE ELSE (SELECT h.closeprice FROM fim_qutndtls_tmp_v h WHERE h.INSTRID = D.INSTRID AND h.ACT_DATE = B.BOOKINGDATE) END AS PRIX, CASE WHEN (D.EXCHIND = 'N' AND D.CLASSID != 'MTFU') THEN NORMALQUANTITY * D.PARVALUE ELSE NORMALQUANTITY * (SELECT h.closeprice FROM fim_qutndtls_tmp_v h WHERE h.INSTRID = D.INSTRID AND h.ACT_DATE = B.BOOKINGDATE) END AS CAPITALISATION, CASE WHEN NORMALQUANTITY >= 0 THEN '+' ELSE '-' END AS SENS, D.CLASSID AS CLASS, D.INSTRTYPE AS TYPE FROM stg_bkp_secac A INNER JOIN stg_bkp_secposeod B ON A.ACOWNERID = B.ACOWNERID AND A.ACNO = B.ACNO AND (?1 IS NULL OR B.BOOKINGDATE >= ?1) AND (?1 IS NULL OR B.BOOKINGDATE <= ?1) AND B.NORMALQUANTITY != 0 INNER JOIN stg_fim_prmydtls D ON B.SECURITYID = D.INSTRID INNER JOIN stg_bpm_prmrydtls F ON B.ACOWNERID = F.BPID INNER JOIN stg_bpm_prmrydtls G ON B.ACOWNERID = G.BPID LEFT OUTER JOIN stg_fim_asoctdagnt AG ON B.SECURITYID = AG.INSTRID AND AG.AGENTTYPE = 'REGT' AND AG.DEFAULTIND = 'Y' LEFT OUTER JOIN stg_fim_asoctdagnt AGS ON B.SECURITYID = AGS.INSTRID AND AGS.AGENTTYPE = 'ASMR' AND AGS.DEFAULTIND = 'Y' LEFT OUTER JOIN stg_fim_qutndtls E ON B.SECURITYID = E.INSTRID AND D.INSTRID = E.INSTRID WHERE B.ACOWNERID NOT IN (SELECT BPID FROM stg_bpm_poadetails)", nativeQuery = true)
    List<ReleveDeSoldeDetaille> findAllReleveDeSoldeDetaille(String bookingDate, String instrumentCategory, String instrumentSousCategory);
}