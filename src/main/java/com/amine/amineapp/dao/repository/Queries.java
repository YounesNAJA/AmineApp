package com.amine.amineapp.dao.repository;

public abstract class Queries {
    public static final String ALL_CAPITALISATIONS = "SELECT a.ACNO NUMEROCOMPTE, a.SECURITYID INSTRUMENT, c.ENGLONGNAME LIBELLEINSTRUMENT, c.INSTRCTGRY CATEGORIE, a.NORMALQUANTITY QUANTITEAVOIRS, case WHEN c.CLASSID='DEBT' THEN c.PARVALUE*a.NORMALQUANTITY WHEN c.CLASSID ='MTFU' THEN g.CLOSEPRICE*a.NORMALQUANTITY WHEN c.CLASSID='EQTY' THEN g.CLOSEPRICE*a.NORMALQUANTITY WHEN c.CLASSID='EQTY' and c.INSTRCTGRY = 'OPCR' THEN c.PARVALUE*a.NORMALQUANTITY END CAPI FROM stg_bkp_secposeod a LEFT JOIN stg_bpm_poadetails b ON a.ACOWNERID=b.BPID LEFT JOIN stg_bpm_prmrydtls e ON b.POAHOLDER=e.BPID LEFT JOIN stg_fim_prmydtls c ON a.SECURITYID=c.INSTRID LEFT JOIN fim_qutndtls_tmp_v g ON a.SECURITYID=g.INSTRID, stg_bkp_secac f WHERE a.ACOWNERID=f.ACOWNERID and a.NORMALQUANTITY <> 0 and a.ACNO=f.ACNO AND (?1 IS NULL OR a.BOOKINGDATE = ?1) AND (?2 IS NULL OR c.INSTRCTGRY = ?2) ORDER BY a.SECURITYID";
    public static final String CAPITALISATION_ANNUELLE = "SELECT c.INSTRCTGRY AS CATEGORIE, YEAR(a.BOOKINGDATE) AS ANNEE, case WHEN c.CLASSID='DEBT' THEN abs(c.PARVALUE*a.NORMALQUANTITY) WHEN c.CLASSID ='MTFU' THEN abs(g.CLOSEPRICE*a.NORMALQUANTITY) WHEN c.CLASSID='EQTY' THEN abs(g.CLOSEPRICE*a.NORMALQUANTITY) WHEN c.CLASSID='EQTY' and c.INSTRCTGRY = 'OPCR' THEN abs(c.PARVALUE*a.NORMALQUANTITY) END CAPI FROM stg_bkp_secposeod a LEFT JOIN stg_bpm_poadetails b ON a.ACOWNERID=b.BPID LEFT JOIN stg_bpm_prmrydtls e ON b.POAHOLDER=e.BPID LEFT JOIN stg_fim_prmydtls c ON a.SECURITYID=c.INSTRID LEFT JOIN fim_qutndtls_tmp_v g ON a.SECURITYID=g.INSTRID, stg_bkp_secac f WHERE a.ACOWNERID=f.ACOWNERID and f. ACTYPE='20' and a.NORMALQUANTITY <> 0 and a.ACNO=f.ACNO AND (?1 IS NULL AND ?2 IS NULL OR a.BOOKINGDATE BETWEEN ?1 AND ?2) GROUP BY c.INSTRCTGRY, YEAR(a.BOOKINGDATE)";
    public static final String CAPITALISATION_MENSUELLE = "SELECT c.INSTRCTGRY AS CATEGORIE, Month(a.BOOKINGDATE) AS ANNEE, case WHEN c.CLASSID='DEBT' THEN abs(c.PARVALUE*a.NORMALQUANTITY) WHEN c.CLASSID ='MTFU' THEN abs(g.CLOSEPRICE*a.NORMALQUANTITY) WHEN c.CLASSID='EQTY' THEN abs(g.CLOSEPRICE*a.NORMALQUANTITY) WHEN c.CLASSID='EQTY' and c.INSTRCTGRY = 'OPCR' THEN abs(c.PARVALUE*a.NORMALQUANTITY) END CAPI FROM stg_bkp_secposeod a LEFT JOIN stg_bpm_poadetails b ON a.ACOWNERID=b.BPID LEFT JOIN stg_bpm_prmrydtls e ON b.POAHOLDER=e.BPID LEFT JOIN stg_fim_prmydtls c ON a.SECURITYID=c.INSTRID LEFT JOIN fim_qutndtls_tmp_v g ON a.SECURITYID=g.INSTRID, stg_bkp_secac f WHERE a.ACOWNERID=f.ACOWNERID and f. ACTYPE='20' and a.NORMALQUANTITY <> 0 and a.ACNO=f.ACNO AND (?1 IS NULL AND ?2 IS NULL OR a.BOOKINGDATE BETWEEN ?1 AND ?2) GROUP BY c.INSTRCTGRY, Month(a.BOOKINGDATE)";
    public static final String INSTRUMENT_CATEGORIES = "SELECT DISTINCT CLASSID FROM stg_fim_prmydtls";
    public static final String INSTRUMENT_SOUS_CATEGORIES = "SELECT DISTINCT INSTRCTGRY FROM stg_fim_prmydtls";
    public static final String RELEVE_SOLDE_DETAILLE = "SELECT DISTINCT B.BOOKINGDATE AS DATE_MAJ, C.POAHOLDER AS CODE_MANDATAIRE, F.BPNAME AS LIBELLE_MANDATAIRE, B.ACOWNERID AS CODE_MANDANT, G.BPNAME AS LIBELLE_MANDANT, A.ACNO AS NUM_COMPTE, D.ISSUERCD AS EMETTEUR, AG.AGENTID AS AGENT, AGS.AGENTID AS GESTION, SECURITYID AS CODE_VALEUR, D.ENGLONGNAME AS LIBELLE_VALEUR, NORMALQUANTITY AS QUANTITE, ACOPENINGDATE AS DATE_OUVERTURE, CASE WHEN (D.EXCHIND = 'N' AND D.CLASSID != 'MTFU') THEN D.PARVALUE ELSE (SELECT h.closeprice FROM fim_qutndtls_tmp_v h WHERE h.INSTRID = D.INSTRID AND h.ACT_DATE = B.BOOKINGDATE) END AS PRIX, CASE WHEN (D.EXCHIND = 'N' AND D.CLASSID != 'MTFU') THEN NORMALQUANTITY * D.PARVALUE ELSE NORMALQUANTITY * (SELECT h.closeprice FROM fim_qutndtls_tmp_v h WHERE h.INSTRID = D.INSTRID AND h.ACT_DATE = B.BOOKINGDATE) END AS CAPITALISATION, CASE WHEN NORMALQUANTITY >= 0 THEN '+' ELSE '-' END AS SENS, D.CLASSID AS CLASS, D.INSTRTYPE AS TYPE FROM stg_bkp_secac A INNER JOIN stg_bkp_secposeod B ON A.ACOWNERID = B.ACOWNERID AND A.ACNO = B.ACNO AND (?1 IS NULL OR B.BOOKINGDATE >= ?1) AND (?1 IS NULL OR B.BOOKINGDATE <= ?1) AND B.NORMALQUANTITY != 0 INNER JOIN stg_bpm_poadetails C ON C.BPID = A.ACOWNERID AND C.TODATE >= B.BOOKINGDATE AND C.MCSTATUS = 2 INNER JOIN stg_fim_prmydtls D ON B.SECURITYID = D.INSTRID INNER JOIN stg_bpm_prmrydtls F ON C.POAHOLDER = F.BPID INNER JOIN stg_bpm_prmrydtls G ON A.ACOWNERID = G.BPID LEFT OUTER JOIN stg_fim_asoctdagnt AG ON B.SECURITYID = AG.INSTRID AND AG.AGENTTYPE = 'REGT' AND AG.DEFAULTIND = 'Y' LEFT OUTER JOIN stg_fim_asoctdagnt AGS ON B.SECURITYID = AGS.INSTRID AND AGS.AGENTTYPE = 'ASMR' AND AGS.DEFAULTIND = 'Y' LEFT OUTER JOIN stg_fim_qutndtls E ON B.SECURITYID = E.INSTRID AND D.INSTRID = E.INSTRID UNION SELECT DISTINCT B.BOOKINGDATE AS DATE_MAJ, B.ACOWNERID AS CODE_MANDATAIRE, F.BPNAME AS LIBELLE_MANDATAIRE, B.ACOWNERID AS CODE_MANDANT, G.BPNAME AS LIBELLE_MANDANT, A.ACNO AS NUM_COMPTE, D.ISSUERCD AS EMETTEUR, AG.AGENTID AS AGENT, AGS.AGENTID AS GESTION, SECURITYID AS CODE_VALEUR, D.ENGLONGNAME AS LIBELLE_VALEUR, NORMALQUANTITY AS QUANTITE, ACOPENINGDATE AS DATE_OUVERTURE, CASE WHEN (D.EXCHIND = 'N' AND D.CLASSID != 'MTFU') THEN D.PARVALUE ELSE (SELECT h.closeprice FROM fim_qutndtls_tmp_v h WHERE h.INSTRID = D.INSTRID AND h.ACT_DATE = B.BOOKINGDATE) END AS PRIX, CASE WHEN (D.EXCHIND = 'N' AND D.CLASSID != 'MTFU') THEN NORMALQUANTITY * D.PARVALUE ELSE NORMALQUANTITY * (SELECT h.closeprice FROM fim_qutndtls_tmp_v h WHERE h.INSTRID = D.INSTRID AND h.ACT_DATE = B.BOOKINGDATE) END AS CAPITALISATION, CASE WHEN NORMALQUANTITY >= 0 THEN '+' ELSE '-' END AS SENS, D.CLASSID AS CLASS, D.INSTRTYPE AS TYPE FROM stg_bkp_secac A INNER JOIN stg_bkp_secposeod B ON A.ACOWNERID = B.ACOWNERID AND A.ACNO = B.ACNO AND (?1 IS NULL OR B.BOOKINGDATE >= ?1) AND (?1 IS NULL OR B.BOOKINGDATE <= ?1) AND B.NORMALQUANTITY != 0 INNER JOIN stg_fim_prmydtls D ON B.SECURITYID = D.INSTRID INNER JOIN stg_bpm_prmrydtls F ON B.ACOWNERID = F.BPID INNER JOIN stg_bpm_prmrydtls G ON B.ACOWNERID = G.BPID LEFT OUTER JOIN stg_fim_asoctdagnt AG ON B.SECURITYID = AG.INSTRID AND AG.AGENTTYPE = 'REGT' AND AG.DEFAULTIND = 'Y' LEFT OUTER JOIN stg_fim_asoctdagnt AGS ON B.SECURITYID = AGS.INSTRID AND AGS.AGENTTYPE = 'ASMR' AND AGS.DEFAULTIND = 'Y' LEFT OUTER JOIN stg_fim_qutndtls E ON B.SECURITYID = E.INSTRID AND D.INSTRID = E.INSTRID WHERE B.ACOWNERID NOT IN (SELECT BPID FROM stg_bpm_poadetails)";
    public static final String RELEVE_SOLDE = "SELECT ACOWNERID MANDANT, B.BPNAME LIBELLEMANDANT, CASE WHEN C.POAHOLDER IS NULL THEN A.ACOWNERID ELSE C.POAHOLDER END AS MANDATAIRE, CASE WHEN D.BPNAME IS NULL THEN B.BPNAME ELSE D.BPNAME END AS LIBELLEMANDATAIRE, A.ACNO, A.SECURITYID, E.ENGLONGNAME, E.INSTRCTGRY, A.NORMALQUANTITY FROM STG_BKP_SECPOSEOD A LEFT JOIN STG_BPM_POADETAILS C ON A.ACOWNERID = C.BPID LEFT JOIN STG_BPM_PRMRYDTLS D ON C.POAHOLDER = D.BPID, STG_BPM_PRMRYDTLS B, STG_FIM_PRMYDTLS E WHERE A.ACOWNERID = B.BPID AND A.SECURITYID = E.INSTRID AND A.NORMALQUANTITY != 0 AND (?1 IS NULL OR A.BOOKINGDATE = ?1) AND (?2 IS NULL OR E.CLASSID = ?2) AND (?3 IS NULL OR E.INSTRCTGRY = ?3) ORDER BY A.ACOWNERID";
}
